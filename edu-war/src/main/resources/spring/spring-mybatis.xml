<?xml version="1.0" encoding="utf-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
           http://www.springframework.org/schema/beans/spring-beans.xsd  
           http://www.springframework.org/schema/context  
           http://www.springframework.org/schema/context/spring-context.xsd  
           http://www.springframework.org/schema/aop  
           http://www.springframework.org/schema/aop/spring-aop.xsd
		   http://www.springframework.org/schema/jee
		   http://www.springframework.org/schema/jee/spring-jee.xsd 
		   http://www.springframework.org/schema/tx     
           http://www.springframework.org/schema/tx/spring-tx.xsd
           http://www.springframework.org/schema/mvc      
           http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- 引入dbconfig.properties属性文件 -->
	<context:property-placeholder
		location="classpath:jdbc.properties"
		ignore-unresolvable="true" />
	<!-- JNDI方式配置数据源 -->
	<!-- <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> <property name="jndiName" 
		value="${jndiName}"></property> </bean> -->
	<!-- ========================================配置数据源========================================= -->
	<!-- 配置数据源 -->
	<bean
		id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName">
			<value>${jdbc.driverClassName}</value>
		</property>
		<property name="url">
			<value>${jdbc.url}</value>
		</property>
		<property name="username">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
		<!-- 测试数据库是否链接正确 <property name="validationQuery" value="${validationQuery}" /> -->
		<!-- 初始化连接大小 <property name="initialSize" value="0" /> -->
		<!-- 连接池最大使用连接数量 -->
		<property
			name="maxActive"
			value="20" />
		<!-- 连接池最大空闲 <property name="maxIdle" value="20" /> -->
		<!-- 连接池最小空闲 <property name="minIdle" value="0" /> -->
		<!-- 获取连接最大等待时间 <property name="maxWait" value="60000" /> <property name="testOnBorrow" value="false" 
			/> <property name="testOnReturn" value="false" /> <property name="testWhileIdle" value="true" /> -->
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 <property name="timeBetweenEvictionRunsMillis" value="60000" /> -->
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 <property name="minEvictableIdleTimeMillis" value="25200000" /> -->
		<!-- 打开removeAbandoned功能 <property name="removeAbandoned" value="true" /> -->
		<!-- 1800秒，也就是30分钟 <property name="removeAbandonedTimeout" value="1800" /> -->
		<!-- 关闭abanded连接时输出错误日志 <property name="logAbandoned" value="true" /> -->
	</bean>

	<!-- 自动扫描目录下所有SQL映射的xml文件, -->
	<bean
		id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property
			name="dataSource"
			ref="dataSource" />
		<property
			name="configLocation"
			value="classpath:mybatis-config.xml"></property>
		<property
			name="mapperLocations"
			value="classpath:edu/bistu/platform/*/orm/**/*.xml" />
	</bean>
	<!-- 扫描指定包以及子包下的所有映射接口类 ,com.founder.common.mapper.BaseMapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property
			name="sqlSessionFactoryBeanName"
			value="sqlSessionFactory" />
		<property
			name="basePackage"
			value="edu.bistu.platform.*.orm.mapper" />
	</bean>

	<!-- 配置Spring的事务管理器 -->
	<bean
		id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property
			name="dataSource"
			ref="dataSource" />
	</bean>

	<!-- 注解方式配置事物 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>