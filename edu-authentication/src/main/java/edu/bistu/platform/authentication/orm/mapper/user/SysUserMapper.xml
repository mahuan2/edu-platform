<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.bistu.platform.authentication.orm.mapper.user.SysUserMapper">
  <resultMap id="BaseResultMap" type="edu.bistu.platform.authentication.orm.model.user.SysUser">
    <id column="userId" jdbcType="INTEGER" property="userId" />
    <result column="loginName" jdbcType="VARCHAR" property="loginName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="organId" jdbcType="INTEGER" property="organId" />
    <result column="departmentId" jdbcType="INTEGER" property="departmentId" />
    <result column="limitLoginIp" jdbcType="VARCHAR" property="limitLoginIp" />
    <result column="lastLoginDate" jdbcType="TIMESTAMP" property="lastLoginDate" />
    <result column="loginCount" jdbcType="INTEGER" property="loginCount" />
    <result column="failCount" jdbcType="INTEGER" property="failCount" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="createtDate" jdbcType="TIMESTAMP" property="createtDate" />
    <result column="createUserId" jdbcType="INTEGER" property="createUserId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    userId, loginName, password, name, status, organId, departmentId, limitLoginIp, lastLoginDate, 
    loginCount, failCount, mobile, email, createtDate, createUserId
  </sql>
  <select id="selectByExample" parameterType="edu.bistu.platform.authentication.orm.model.user.SysUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >= 0">
      limit ${limitStart} , ${count}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where userId = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_user
    where userId = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="edu.bistu.platform.authentication.orm.model.user.SysUserExample">
    delete from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.bistu.platform.authentication.orm.model.user.SysUser">
    <selectKey keyProperty="userId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_user (loginName, password, name, 
      status, organId, departmentId, 
      limitLoginIp, lastLoginDate, loginCount, 
      failCount, mobile, email, 
      createtDate, createUserId)
    values (#{loginName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{organId,jdbcType=INTEGER}, #{departmentId,jdbcType=INTEGER}, 
      #{limitLoginIp,jdbcType=VARCHAR}, #{lastLoginDate,jdbcType=TIMESTAMP}, #{loginCount,jdbcType=INTEGER}, 
      #{failCount,jdbcType=INTEGER}, #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{createtDate,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="edu.bistu.platform.authentication.orm.model.user.SysUser">
    <selectKey keyProperty="userId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="loginName != null">
        loginName,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="organId != null">
        organId,
      </if>
      <if test="departmentId != null">
        departmentId,
      </if>
      <if test="limitLoginIp != null">
        limitLoginIp,
      </if>
      <if test="lastLoginDate != null">
        lastLoginDate,
      </if>
      <if test="loginCount != null">
        loginCount,
      </if>
      <if test="failCount != null">
        failCount,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="createtDate != null">
        createtDate,
      </if>
      <if test="createUserId != null">
        createUserId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="organId != null">
        #{organId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="limitLoginIp != null">
        #{limitLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginDate != null">
        #{lastLoginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="loginCount != null">
        #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="failCount != null">
        #{failCount,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="createtDate != null">
        #{createtDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.bistu.platform.authentication.orm.model.user.SysUserExample" resultType="java.lang.Long">
    select count(*) from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_user
    <set>
      <if test="record.userId != null">
        userId = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.loginName != null">
        loginName = #{record.loginName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.organId != null">
        organId = #{record.organId,jdbcType=INTEGER},
      </if>
      <if test="record.departmentId != null">
        departmentId = #{record.departmentId,jdbcType=INTEGER},
      </if>
      <if test="record.limitLoginIp != null">
        limitLoginIp = #{record.limitLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLoginDate != null">
        lastLoginDate = #{record.lastLoginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loginCount != null">
        loginCount = #{record.loginCount,jdbcType=INTEGER},
      </if>
      <if test="record.failCount != null">
        failCount = #{record.failCount,jdbcType=INTEGER},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.createtDate != null">
        createtDate = #{record.createtDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null">
        createUserId = #{record.createUserId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_user
    set userId = #{record.userId,jdbcType=INTEGER},
      loginName = #{record.loginName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      organId = #{record.organId,jdbcType=INTEGER},
      departmentId = #{record.departmentId,jdbcType=INTEGER},
      limitLoginIp = #{record.limitLoginIp,jdbcType=VARCHAR},
      lastLoginDate = #{record.lastLoginDate,jdbcType=TIMESTAMP},
      loginCount = #{record.loginCount,jdbcType=INTEGER},
      failCount = #{record.failCount,jdbcType=INTEGER},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      createtDate = #{record.createtDate,jdbcType=TIMESTAMP},
      createUserId = #{record.createUserId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.bistu.platform.authentication.orm.model.user.SysUser">
    update sys_user
    <set>
      <if test="loginName != null">
        loginName = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="organId != null">
        organId = #{organId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        departmentId = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="limitLoginIp != null">
        limitLoginIp = #{limitLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginDate != null">
        lastLoginDate = #{lastLoginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="loginCount != null">
        loginCount = #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="failCount != null">
        failCount = #{failCount,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="createtDate != null">
        createtDate = #{createtDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        createUserId = #{createUserId,jdbcType=INTEGER},
      </if>
    </set>
    where userId = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.bistu.platform.authentication.orm.model.user.SysUser">
    update sys_user
    set loginName = #{loginName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      organId = #{organId,jdbcType=INTEGER},
      departmentId = #{departmentId,jdbcType=INTEGER},
      limitLoginIp = #{limitLoginIp,jdbcType=VARCHAR},
      lastLoginDate = #{lastLoginDate,jdbcType=TIMESTAMP},
      loginCount = #{loginCount,jdbcType=INTEGER},
      failCount = #{failCount,jdbcType=INTEGER},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      createtDate = #{createtDate,jdbcType=TIMESTAMP},
      createUserId = #{createUserId,jdbcType=INTEGER}
    where userId = #{userId,jdbcType=INTEGER}
  </update>
</mapper>