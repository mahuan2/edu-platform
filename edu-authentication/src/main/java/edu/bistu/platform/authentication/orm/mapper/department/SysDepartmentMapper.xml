<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.bistu.platform.authentication.orm.mapper.department.SysDepartmentMapper">
  <resultMap id="BaseResultMap" type="edu.bistu.platform.authentication.orm.model.department.SysDepartment">
    <id column="departmentId" jdbcType="INTEGER" property="departmentId" />
    <result column="parentDepartmentId" jdbcType="INTEGER" property="parentDepartmentId" />
    <result column="departmentName" jdbcType="VARCHAR" property="departmentName" />
    <result column="departmentLevel" jdbcType="INTEGER" property="departmentLevel" />
    <result column="departmentPidJoin" jdbcType="VARCHAR" property="departmentPidJoin" />
    <result column="departmentStatus" jdbcType="INTEGER" property="departmentStatus" />
    <result column="isIllegalsite" jdbcType="INTEGER" property="isIllegalsite" />
    <result column="contactUser" jdbcType="VARCHAR" property="contactUser" />
    <result column="contactType" jdbcType="VARCHAR" property="contactType" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createDate" />
    <result column="expiredDate" jdbcType="DATE" property="expiredDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    departmentId, parentDepartmentId, departmentName, departmentLevel, departmentPidJoin, 
    departmentStatus, isIllegalsite, contactUser, contactType, createDate, expiredDate
  </sql>
  <select id="selectByExample" parameterType="edu.bistu.platform.authentication.orm.model.department.SysDepartmentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from sys_department
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >= 0">
      limit ${limitStart} , ${count}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_department
    where departmentId = #{departmentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_department
    where departmentId = #{departmentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="edu.bistu.platform.authentication.orm.model.department.SysDepartmentExample">
    delete from sys_department
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.bistu.platform.authentication.orm.model.department.SysDepartment">
    <selectKey keyProperty="departmentId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_department (parentDepartmentId, departmentName, 
      departmentLevel, departmentPidJoin, departmentStatus, 
      isIllegalsite, contactUser, contactType, 
      createDate, expiredDate)
    values (#{parentDepartmentId,jdbcType=INTEGER}, #{departmentName,jdbcType=VARCHAR}, 
      #{departmentLevel,jdbcType=INTEGER}, #{departmentPidJoin,jdbcType=VARCHAR}, #{departmentStatus,jdbcType=INTEGER}, 
      #{isIllegalsite,jdbcType=INTEGER}, #{contactUser,jdbcType=VARCHAR}, #{contactType,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{expiredDate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="edu.bistu.platform.authentication.orm.model.department.SysDepartment">
    <selectKey keyProperty="departmentId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_department
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="parentDepartmentId != null">
        parentDepartmentId,
      </if>
      <if test="departmentName != null">
        departmentName,
      </if>
      <if test="departmentLevel != null">
        departmentLevel,
      </if>
      <if test="departmentPidJoin != null">
        departmentPidJoin,
      </if>
      <if test="departmentStatus != null">
        departmentStatus,
      </if>
      <if test="isIllegalsite != null">
        isIllegalsite,
      </if>
      <if test="contactUser != null">
        contactUser,
      </if>
      <if test="contactType != null">
        contactType,
      </if>
      <if test="createDate != null">
        createDate,
      </if>
      <if test="expiredDate != null">
        expiredDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="parentDepartmentId != null">
        #{parentDepartmentId,jdbcType=INTEGER},
      </if>
      <if test="departmentName != null">
        #{departmentName,jdbcType=VARCHAR},
      </if>
      <if test="departmentLevel != null">
        #{departmentLevel,jdbcType=INTEGER},
      </if>
      <if test="departmentPidJoin != null">
        #{departmentPidJoin,jdbcType=VARCHAR},
      </if>
      <if test="departmentStatus != null">
        #{departmentStatus,jdbcType=INTEGER},
      </if>
      <if test="isIllegalsite != null">
        #{isIllegalsite,jdbcType=INTEGER},
      </if>
      <if test="contactUser != null">
        #{contactUser,jdbcType=VARCHAR},
      </if>
      <if test="contactType != null">
        #{contactType,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="expiredDate != null">
        #{expiredDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.bistu.platform.authentication.orm.model.department.SysDepartmentExample" resultType="java.lang.Long">
    select count(*) from sys_department
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_department
    <set>
      <if test="record.departmentId != null">
        departmentId = #{record.departmentId,jdbcType=INTEGER},
      </if>
      <if test="record.parentDepartmentId != null">
        parentDepartmentId = #{record.parentDepartmentId,jdbcType=INTEGER},
      </if>
      <if test="record.departmentName != null">
        departmentName = #{record.departmentName,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentLevel != null">
        departmentLevel = #{record.departmentLevel,jdbcType=INTEGER},
      </if>
      <if test="record.departmentPidJoin != null">
        departmentPidJoin = #{record.departmentPidJoin,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentStatus != null">
        departmentStatus = #{record.departmentStatus,jdbcType=INTEGER},
      </if>
      <if test="record.isIllegalsite != null">
        isIllegalsite = #{record.isIllegalsite,jdbcType=INTEGER},
      </if>
      <if test="record.contactUser != null">
        contactUser = #{record.contactUser,jdbcType=VARCHAR},
      </if>
      <if test="record.contactType != null">
        contactType = #{record.contactType,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        createDate = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expiredDate != null">
        expiredDate = #{record.expiredDate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_department
    set departmentId = #{record.departmentId,jdbcType=INTEGER},
      parentDepartmentId = #{record.parentDepartmentId,jdbcType=INTEGER},
      departmentName = #{record.departmentName,jdbcType=VARCHAR},
      departmentLevel = #{record.departmentLevel,jdbcType=INTEGER},
      departmentPidJoin = #{record.departmentPidJoin,jdbcType=VARCHAR},
      departmentStatus = #{record.departmentStatus,jdbcType=INTEGER},
      isIllegalsite = #{record.isIllegalsite,jdbcType=INTEGER},
      contactUser = #{record.contactUser,jdbcType=VARCHAR},
      contactType = #{record.contactType,jdbcType=VARCHAR},
      createDate = #{record.createDate,jdbcType=TIMESTAMP},
      expiredDate = #{record.expiredDate,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.bistu.platform.authentication.orm.model.department.SysDepartment">
    update sys_department
    <set>
      <if test="parentDepartmentId != null">
        parentDepartmentId = #{parentDepartmentId,jdbcType=INTEGER},
      </if>
      <if test="departmentName != null">
        departmentName = #{departmentName,jdbcType=VARCHAR},
      </if>
      <if test="departmentLevel != null">
        departmentLevel = #{departmentLevel,jdbcType=INTEGER},
      </if>
      <if test="departmentPidJoin != null">
        departmentPidJoin = #{departmentPidJoin,jdbcType=VARCHAR},
      </if>
      <if test="departmentStatus != null">
        departmentStatus = #{departmentStatus,jdbcType=INTEGER},
      </if>
      <if test="isIllegalsite != null">
        isIllegalsite = #{isIllegalsite,jdbcType=INTEGER},
      </if>
      <if test="contactUser != null">
        contactUser = #{contactUser,jdbcType=VARCHAR},
      </if>
      <if test="contactType != null">
        contactType = #{contactType,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        createDate = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="expiredDate != null">
        expiredDate = #{expiredDate,jdbcType=DATE},
      </if>
    </set>
    where departmentId = #{departmentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.bistu.platform.authentication.orm.model.department.SysDepartment">
    update sys_department
    set parentDepartmentId = #{parentDepartmentId,jdbcType=INTEGER},
      departmentName = #{departmentName,jdbcType=VARCHAR},
      departmentLevel = #{departmentLevel,jdbcType=INTEGER},
      departmentPidJoin = #{departmentPidJoin,jdbcType=VARCHAR},
      departmentStatus = #{departmentStatus,jdbcType=INTEGER},
      isIllegalsite = #{isIllegalsite,jdbcType=INTEGER},
      contactUser = #{contactUser,jdbcType=VARCHAR},
      contactType = #{contactType,jdbcType=VARCHAR},
      createDate = #{createDate,jdbcType=TIMESTAMP},
      expiredDate = #{expiredDate,jdbcType=DATE}
    where departmentId = #{departmentId,jdbcType=INTEGER}
  </update>
</mapper>